<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.3.xsd
        http://www.springframework.org/schema/task
        http://www.springframework.org/schema/task/spring-task-3.2.xsd  ">

    <!-- 可以扫描controller、service、...
    这里让扫描controller，指定controller的包
     -->
    <context:component-scan base-package="com.cs.scu.controller"/>
    <context:component-scan base-package="com.cs.scu.util"/>

    <!--配置计划任务!-->
    <task:annotation-driven scheduler="taskScheduler" mode="proxy"/>
    <task:scheduler id="taskScheduler" pool-size="10"/>
    <!--注解映射器 -->
    <!-- <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/> -->
    <!--注解适配器 -->
    <!-- <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"/> -->

    <!-- 使用 mvc:annotation-driven代替上边注解映射器和注解适配器配置
    mvc:annotation-driven默认加载很多的参数绑定方法，
    比如json转换解析器就默认加载了，如果使用mvc:annotation-driven不用配置上边的RequestMappingHandlerMapping和RequestMappingHandlerAdapter
    实际开发时使用mvc:annotation-driven
     -->

    <mvc:annotation-driven >
        <!-- 消息转换器 -->
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes" value="text/html;charset=UTF-8"/>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <mvc:resources location="/resources/" mapping="/resources/**" />


    <!-- 视图解析器
    解析jsp解析，默认使用jstl标签，classpath下的得有jstl的包
     -->
    <bean
            class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 配置jsp路径的前缀 -->
        <property name="prefix" value="/WEB-INF/pages/"/>
        <!-- 配置jsp路径的后缀 -->
        <property name="suffix" value=".jsp"/>
    </bean>

    <import resource="kafka-beans.xml"></import>
    <!--&lt;!&ndash; 拦截器 &ndash;&gt;-->
    <!--<mvc:interceptors>-->
    <!--<mvc:interceptor>-->
    <!--&lt;!&ndash; /**表示所有url包括子url路径 &ndash;&gt;-->
    <!--<mvc:mapping path="/**"/>-->
    <!--<mvc:exclude-mapping path="/userLogin.action"/>-->
    <!--<mvc:exclude-mapping path="/userVerify.action"/>-->
    <!--<mvc:exclude-mapping path="/userRegister.action"/>-->
    <!--<bean class="team.neu.ticket.interceptor.LoginIntercepter"></bean>-->
    <!--</mvc:interceptor>-->
    <!--</mvc:interceptors>-->
</beans>